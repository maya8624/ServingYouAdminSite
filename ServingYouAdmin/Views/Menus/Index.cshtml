@model MenuListViewModel

@{
    ViewData["Title"] = "Menu List";
}

<div class="row d-flex justify-content-between">
    <div><h3 class="ml-3">Menu List</h3></div>
    <div class="mt-3 mr-3">
        <a asp-action="Create" class="btn btn-primary btn-sm">Create New</a>
    </div>
</div>

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group mb-2">
        <label for="name" class="m-1">Name:</label>
        <input type="text" asp-for="@Model.SearchString" id="name" class="form-control" />
        <label for="category" class="m-2">Category:</label>
        <select asp-for="@Model.Category" asp-items="@Html.GetEnumSelectList<MenuCategory>()" id="category" class="form-control mr-2">
            <option value="">All</option>
        </select>
        <input type="submit" max="20" value="Search" class="btn btn-primary btn-sm ml-2" />
        <a asp-action="Index" class="btn btn-primary btn-sm ml-2">Back to Full List</a>
    </div>
</form>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">
                <a asp-action="Index"
                   asp-route-currentSortOrder="@Model.CurrentSortOrder"
                   asp-route-sortOrder="@Model.SortOrder"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-category="@Model.Category" />

                @Html.DisplayNameFor(model => model.Menus[0].Name)

                @{
                    string arrow = "&darr;";
                    
                    if (string.IsNullOrEmpty(Model.CurrentSortOrder))
                        arrow = "&uarr;";

                }
                <span>@Html.Raw(arrow)</span>
                </a>
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Menus[0].Available)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Menus[0].Category)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Menus[0].Price)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Menus[0].DateCreated)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Menus)
        {
            <tr>
                <td scope="row">
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Name)
                    </a>
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.Available)
                </td>
                <td scope="row">

                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Menus.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Menus.HasNextPage ? "disabled" : "";
}
                
@if (Model.Menus.TotalPages > 1)
{
    <div class="my-4">
        <nav aria-label="page navigation">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a asp-action="Index"
                       asp-route-currentSortOrder="@Model.CurrentSortOrder"
                       asp-route-sortOrder="@Model.SortOrder"
                       asp-route-pageNumber="@(Model.Menus.PageIndex - 1)"
                       asp-route-searchString="@Model.SearchString"
                       asp-route-category="@Model.Category"
                       class="page-link" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                @{
                    string activeClass = string.Empty;

                    for (int i = 1; i <= Model.Menus.TotalPages; i++)
                    {
                        activeClass = (Model.Menus.PageIndex == i) ? "page-item active" : "";

                        <li class="page-item @activeClass">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-currentSortOrder="@Model.CurrentSortOrder"
                               asp-route-sortOrder="@Model.SortOrder"
                               asp-route-pageNumber="@i"
                               asp-route-searchString="@Model.SearchString"
                               asp-route-category="@Model.Category">
                                @i
                            </a>
                        </li>
                    }
                }

                <li class="page-item @nextDisabled">
                    <a asp-action="Index"
                       asp-route-currentSortOrder="@Model.CurrentSortOrder"
                       asp-route-sortOrder="@Model.SortOrder"
                       asp-route-pageNumber="@(Model.Menus.PageIndex + 1)"
                       asp-route-searchString="@Model.SearchString"
                       asp-route-category="@Model.Category"
                       class="page-link" aria-label="Previous">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}
