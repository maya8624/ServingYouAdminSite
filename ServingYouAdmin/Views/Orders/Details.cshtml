@model Order

@{
    ViewData["Title"] = "Order Details";
}

<div>
    <h4>Order Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Member.FullName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Member.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Member.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Member.Phone)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderMethod)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderMethod)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderTotal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderTotal)
        </dd>
    </dl>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Menu</th>
                <th scope="col">Price</th>
                <th scope="col">Quantity</th>
                <th scope="col">Sub Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderMenu)
            {
                var subtotal = @item.Quantity * @item.Price;
                <tr>
                    <td scope="row">@Html.DisplayFor(m => item.Menu.Name)</td>
                    <td scope="row">@Html.DisplayFor(m => item.Price)</td>
                    <td scope="row">@Html.DisplayFor(m => item.Quantity)</td>
                    <td scope="row">@Html.DisplayFor(m => item.Subtotal)</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="row d-flex justify-content-center mt-4">
    <div class="mr-3">
        <a asp-action="Index" class="btn btn-primary">Back to List</a>
    </div>   
    <div>
        @if (Model.OrderStatus != OrderStatus.Completed)
        {
            <form asp-action="UpdateStatus">
                <input type="hidden" asp-for="@Model.Id" />
                <input type="submit" value="Click to Complete" class="btn btn-danger"
                       onclick="return confirm('Are you sure you want to update the status?')" />
            </form>
        }
    </div>
</div>
